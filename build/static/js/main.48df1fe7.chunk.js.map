{"version":3,"sources":["Components/Filter/Filter.module.css","Redux/PhoneBook/PhoneBook-action.js","Components/ContactFrom/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","Redux/PhoneBook/PhoneBook-reducer.js","Redux/store.js","index.js","Components/ContactFrom/ContactForm.module.css","Components/ContactList/ContactList.module.css"],"names":["module","exports","removeContact","createAction","filterContacts","addContact","name","number","payload","id","shortid","showAllContacts","ContactForm","state","getContactData","event","currentTarget","value","setState","handleSubmit","preventDefault","props","resetForm","className","styles","container","onSubmit","this","formContainer","formLabel","type","onChange","inputForm","formBtn","Component","mapDispatchToProps","phoneBookActions","connect","contacts","items","filter","contactList","contactItem","toLowerCase","includes","map","contactListItem","contactData","onClick","removeButton","Filter","filterHandler","filterValue","filterContainer","contactsAction","App","reducers","itemsReducers","createReducer","actions","console","log","contact","filterReducer","_","persistConfig","key","storage","blacklist","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.48df1fe7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2bqcg\",\"formLabel\":\"Filter_formLabel__2hPwS\",\"inputForm\":\"Filter_inputForm__1oFbl\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\n// Toolkit\nconst removeContact = createAction('contact/remove');\nconst filterContacts = createAction('contact/filter');\nconst addContact = createAction('contact/add', (name, number) => ({\n  payload: { id: shortid(), name, number },\n}));\nconst showAllContacts = createAction('contact/show');\n\n// no Toolkit\n\n// const addContact = (name, number) => {\n//   return { type: types.ADD, payload: { id: uuidv4(), name, number } };\n// };\n// const removeContact = id => {\n//   return { type: types.DELETE, payload: id };\n// };\n// const filterContacts = text => {\n//   return { type: types.FILTER, payload: text };\n// };\n\nexport { addContact, removeContact, filterContacts, showAllContacts };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport styles from './ContactForm.module.css';\nimport * as phoneBookActions from '../../Redux/PhoneBook/PhoneBook-action';\nimport { connect } from 'react-redux';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  getContactData = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { name, number } = this.state;\n    const { addContact } = this.props;\n    // const contactId = shortid.generate();\n    // const newContact = { id: contactId, name, number };\n\n    // console.log(newContact.name);\n\n    // this.props.onSubmit(newContact);\n\n    this.resetForm();\n\n    addContact(name, number);\n  };\n\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <form onSubmit={this.handleSubmit} className={styles.formContainer}>\n          <label className={styles.formLabel}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.getContactData}\n              className={styles.inputForm}\n            ></input>\n          </label>\n          <label className={styles.formLabel}>\n            Phone number\n            <input\n              type=\"text\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.getContactData}\n              className={styles.inputForm}\n            ></input>\n          </label>\n          <button className={styles.formBtn}>Add to contact list</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = {\n  addContact: phoneBookActions.addContact,\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport styles from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as phoneBookActions from '../../Redux/PhoneBook/PhoneBook-action';\n\nconst ContactList = ({ contacts, removeContact, filter }) => {\n  return (\n    <>\n      <ul className={styles.contactList}>\n        {contacts\n          .filter(contactItem =>\n            contactItem.name.toLowerCase().includes(filter.toLowerCase()),\n          )\n          .map(({ id, name, number }) => (\n            <li key={id} className={styles.contactListItem}>\n              <p className={styles.contactData}>\n                {name}: {number}\n              </p>\n              <button\n                onClick={() => removeContact(id)}\n                className={styles.removeButton}\n              >\n                X\n              </button>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = {\n  removeContact: phoneBookActions.removeContact,\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  removeContact: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { Component } from 'react';\nimport styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport * as contactsAction from '../../Redux/PhoneBook/PhoneBook-action';\nimport { connect } from 'react-redux';\n\nclass Filter extends Component {\n  filterHandler = event => {\n    const { value } = event.currentTarget;\n    const { filterContacts } = this.props;\n    filterContacts(value);\n  };\n\n  render() {\n    const { filterValue } = this.props;\n    return (\n      <div className={styles.filterContainer}>\n        <label className={styles.formLabel}>\n          Contact search\n          <input\n            type=\"text\"\n            name=\"filter\"\n            value={filterValue}\n            onChange={this.filterHandler}\n            className={styles.inputForm}\n          ></input>\n        </label>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ filterValue: state.contacts.filter });\n\nconst mapDispatchToProps = {\n  filterContacts: contactsAction.filterContacts,\n};\n\nFilter.propTypes = {\n  filterHandler: PropTypes.func.isRequired,\n  inputValue: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import baseCss from './base.module.css';\n\nimport React from 'react';\nimport ContactForm from './Components/ContactFrom/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nfunction App() {\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import * as actions from './PhoneBook-action';\nimport { createReducer } from '@reduxjs/toolkit';\n\n//===============================================================\n//Redux Toolkit\n\nconst itemsReducers = createReducer([], {\n  [actions.addContact]: (state, { payload }) => {\n    console.log(state);\n    return [...state, payload];\n  },\n  [actions.removeContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n  [actions.showAllContacts]: (state, { payload }) => {\n    console.log(state);\n    return [...payload];\n  },\n});\n\nconst filterReducer = createReducer('', {\n  [actions.filterContacts]: (_, { payload }) => payload,\n});\n\n//=================================================================\n//without Redux Toolkit\n\n// const innitialItems = [];\n\n// const itemsReducers = (state = innitialItems, { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n//     case types.DELETE:\n//       return state.filter(contact => contact.id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n// const filterReducer = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case types.FILTER:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n\nconst reducers = { itemsReducers, filterReducer };\n\nexport default reducers;\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport reducers from './PhoneBook/PhoneBook-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to\n\n//==================================================\n// Redux Toolkit\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst contactsReducer = combineReducers({\n  items: reducers.itemsReducers,\n  filter: reducers.filterReducer,\n});\n\nconst middleware = getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  },\n});\n\nconst persistedReducer = persistReducer(persistConfig, contactsReducer);\n\nlet store = configureStore({\n  reducer: {\n    contacts: persistedReducer,\n  },\n  middleware,\n});\n\nlet persistor = persistStore(store);\n\nexport { store, persistor };\n\n// no Toolkit\n\n// const contactsReducer = combineReducers({\n//   items: reducers.itemsReducers,\n//   filter: reducers.filterReducer,\n// });\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n// });\n\n// const store = createStore(rootReducer, composeWithDevTools());\n\n// export default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './Redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__bQAwL\",\"formContainer\":\"ContactForm_formContainer__1TE5u\",\"formLabel\":\"ContactForm_formLabel__1_a_w\",\"inputForm\":\"ContactForm_inputForm__3teMb\",\"formBtn\":\"ContactForm_formBtn__kELd6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__12Tes\",\"contactListItem\":\"ContactList_contactListItem__1ilXN\",\"contactData\":\"ContactList_contactData__2JdBC\",\"removeButton\":\"ContactList_removeButton__1icCc\"};"],"sourceRoot":""}